name: $(Build.BuildID)

pool:
  vmImage: "ubuntu-20.04"

steps:
  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens'
    inputs:
      targetFiles: |
        **/*.token.yml => *.yml

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '6.0.x'
      
  - task: DotNetCoreCLI@2
    displayName: 'restore'
    inputs:
      command: 'restore'
      feedsToUse: 'select'
      
  - task: DotNetCoreCLI@2
    displayName: 'build'
    inputs:
      command: 'build'
      
  - task: CmdLine@2
    displayName: 'start mongo daemon'
    inputs:
      script: 'sudo systemctl start mongod'

  - task: DotNetCoreCLI@2
    displayName: 'unit tests'
    env:
      TESTING_MONGO_CONNECTION_STRING: 'mongodb://127.0.0.1:27017'
    inputs:
      command: 'test'
      projects: '**/*Tests.csproj'

  - task: Docker@2
    condition: eq(variables['Build.Reason'], 'IndividualCI')
    inputs:
      containerRegistry: 'official-docker-modmoto'
      repository: 'modmoto/9th-age-league'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      buildContext: '.'
      tags: |
        $(Build.BuildID),
        latest

  - task: CopyFiles@2
    displayName: publish docker-compose files
    inputs:
      contents: '**/*docker-compose.yml'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)